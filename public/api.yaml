openapi: 3.0.0
info:
  title: Fruitable API
  description: Fruitable Project
  version: 0.1.9
servers:
  - url: http://localhost:8080/api/v1
    description: Local Server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
# 2) Apply the security globally to all operations
security:
  - bearerAuth: [] 
paths:
  /users/useradd:
    post:
      summary: Users Registation.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                avtar:
                  type: string
                  format: binary
      responses:
        '200':    # status code
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /users/login:
    post:
      summary: Users Login.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':   
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /users/logout:
    post:
      summary: Users LogOut.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
      responses:
        '200':    # status code
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /users/generateNewToken:
    post:
      summary: Users genrate token.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Users
      responses:
        '200':    # status code
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /users/googleLogin:
    get:
      summary: Users Login and with google.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Users
      responses:
        '200':    # status code
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /categories/list-categories:
    get:
      summary: List Categories.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - Categories
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: pageSize
          schema:
            type: integer
          description: The numbers of items to return  
      responses:
        '200':    # status code
          description: A JSON array `of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string   
  /categories/update-categories/{category_id}:
    put:
      summary: Categories.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories  
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: Update category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string     
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string                     